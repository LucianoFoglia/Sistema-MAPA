@startuml
class Usuario{
 -nombreUsuario : String
 -email : String
 -contrasenia : String
 -rolEnSistema : RolEnSistema
}

class Centro{
 -nombre : String
}

class ObraSocial{
 -nombre : String
}

class Especialidad{
 -nombre : String
}

class Cirugia{
 -Centro: centro
 -obraSocial : ObraSocial
 -especialidad : Especialidad
 -precio : Float
 -practica : Practica
 -fechaPago : LocalDateTime 
 -fechaRealizacion : LocalDateTime
 -estadoPago : EstadoPago
 -integrantes : List<Persona>
 -HonorariosDeIntegrantes: List<HonorarioPorIntegrante>
}

class HonorarioPorIntegrante{
 -persona : Persona
 -cuantoCorresponde : Float
 -criterioCobro : CriterioCobro 

 -cuantoCorresponde(Practica practica) : Float
}

class HonorarioPorRol{
 -rolEnCirugia : RolEnCirugia
 -valor : Float
}

interface CriterioCobro {
 - cuantoCobra(Practica practica) : Float
}

class CobrarPorPorcentaje
class CobrarPorMonto

class Equipo{
 -integrantes : List<Persona>
}

enum EstadoPago{
 EN_ESPERA
 COBRADO
 FACTURADO
 REPARTIDO
}

class Practica{
 -lugar : Lugar
 -especialidad : Especialidad
 -obraSocial : ObraSocial
 -precio : Float 
 -honoariosPorRol : List<HonorarioPorRol>
}

class Persona{
 -nombre: String
 -rolEnCirugia : RolEnCirugia
 -usuario : Usuario
}

enum RolEnCirugia{
 CIRUJANO_PRINCIPAL
 CIRUJANO_AUXILIAR
 ANESTESISTA
 PERFUSIONISTA
 INSTRUMENTADOR
}

enum RolEnSistema{
 JEFE_DE_CIRUGIA
 EMPLEADO
}

HonorarioPorRol --> RolEnCirugia

HonorarioPorIntegrante --> Persona
HonorarioPorIntegrante --> CriterioCobro

CriterioCobro <|.. CobrarPorMonto 
CriterioCobro <|.. CobrarPorPorcentaje 

Practica --> "*" HonorarioPorRol

Persona --> Usuario
Persona --> RolEnCirugia

Usuario --> RolEnSistema

Equipo --> "*" Persona

Cirugia --> Centro
Cirugia --> ObraSocial
Cirugia --> Especialidad
Cirugia --> Practica
Cirugia --> EstadoPago
Cirugia --> "*" Persona
Cirugia --> "*" HonorarioPorIntegrante
@enduml